[{"/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/index.js":"1","/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/App.js":"2","/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/reportWebVitals.js":"3","/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/components/Forecast/forecast.js":"4","/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/components/Conditions/Conditions.js":"5","/Users/mohammedalam/Documents/RIT/Mornin/src/index.js":"6","/Users/mohammedalam/Documents/RIT/Mornin/src/App.js":"7","/Users/mohammedalam/Documents/RIT/Mornin/src/reportWebVitals.js":"8","/Users/mohammedalam/Documents/RIT/Mornin/src/components/Forecast/forecast.js":"9","/Users/mohammedalam/Documents/RIT/Mornin/src/components/Conditions/Conditions.js":"10"},{"size":500,"mtime":1649852753840,"results":"11","hashOfConfig":"12"},{"size":394,"mtime":1649876026373,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1649852753840,"results":"14","hashOfConfig":"12"},{"size":3328,"mtime":1649887170556,"results":"15","hashOfConfig":"12"},{"size":734,"mtime":1649891831323,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1649852753840,"results":"17","hashOfConfig":"18"},{"size":394,"mtime":1649876026373,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1649852753840,"results":"20","hashOfConfig":"18"},{"size":4257,"mtime":1649895635856,"results":"21","hashOfConfig":"18"},{"size":734,"mtime":1649891831323,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wzooea",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"190iyh9",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"45"},"/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/index.js",[],[],["59","60"],"/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/App.js",[],[],"/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/reportWebVitals.js",[],[],"/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/components/Forecast/forecast.js",["61","62","63","64","65","66","67"],[],"import React, { useEffect, useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport classes from './Forecast.module.css';\n\nconst Forecast = () => {\n    let [responseObj, setResponseObj] = useState({});\n    let [city, setCity] = useState('');\n    let [unit, setUnit] = useState('imperial');\n    const uriEncodedCity = encodeURIComponent(city);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isPageLoaded, setIsPageLoaded] = useState(false); //this helps\n\n    function getForecast(e) {\n        // weather data fetch function will go here\n        const options = {\n            method: 'GET',\n            headers: {\n                'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com',\n                'X-RapidAPI-Key': 'fb978a9957msh0b56e3055da8ae7p111c46jsnfa747495b5bc'\n            }\n        };\n\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, options)\n            .then(response => response.json())\n            .then(response => {\n                setResponseObj(response)\n            })\n\n        e.preventDefault();\n        \n    }\n\n    function changeColors() {\n        var main;\n        if (responseObj.weather[0].main === \"Clouds\") {\n            main = \"Clouds\"\n            let appHeaders = document.getElementsByClassName(\"App-header\")\n            for (let i = 0; i < appHeaders.length; i++) {\n                appHeaders[i].style.backgroundColor=\"#163294\";\n            }\n    \n            let appFooters = document.getElementsByTagName(\"footer\")\n            for (let i = 0; i < appFooters.length; i++) {\n                appFooters[i].style.backgroundColor = \"#411F97\";\n                appFooters[i].style.color=\"white\";\n            }\n    \n            console.log(\"Yolo\")\n        }\n    }\n\n    // useEffect(()=>{\n    //     getForecast()\n    // })\n\n    return (\n        // JSX code will go here\n        <div>\n            <h2>Your local Weather</h2>\n            <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    className={classes.textInput}\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    />\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celcius\n                </label>\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\n            </form>\n            <Conditions \n                responseObj={responseObj}\n            />\n        </div>\n    )\n}\n\nexport default Forecast;",["68","69"],"/Users/mohammedalam/Documents/SWEN 344/client-ma3655/weather_app/src/components/Conditions/Conditions.js",["70"],[],"import React from 'react';\n\nconst Conditions = (props) => {\n    var weatherLogo;\n\n    return (\n        <div>\n            {(props.responseObj.cod === 200)?\n                <div className=\"Wrapper\">\n                    <figure>\n                        <img src=\"../images/1.png\" alt='clouds' width=\"200px\"/>\n                    </figure>\n                    <div>\n                        <p><strong>{props.responseObj.name}</strong></p>\n                        <p>It is currently {Math.round(props.responseObj.main.temp)} degrees Farenheight out with {props.responseObj.weather[0].description}.</p>\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nexport default Conditions;","/Users/mohammedalam/Documents/RIT/Mornin/src/index.js",[],[],[],"/Users/mohammedalam/Documents/RIT/Mornin/src/App.js",[],[],"/Users/mohammedalam/Documents/RIT/Mornin/src/reportWebVitals.js",[],[],"/Users/mohammedalam/Documents/RIT/Mornin/src/components/Forecast/forecast.js",["71","72","73","74","75","76","77","78"],[],"import React, { useEffect, useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport classes from './Forecast.module.css';\n\nconst Forecast = () => {\n    let [responseObj, setResponseObj] = useState({});\n    let [city, setCity] = useState('');\n    let [unit, setUnit] = useState('imperial');\n    const uriEncodedCity = encodeURIComponent(city);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isPageLoaded, setIsPageLoaded] = useState(false); //this helps\n\n    function getForecast(e) {\n        // const https = require('https');\n        // https.get(\n        // \"https://api-endpoint.mta.info/Dataservice/mtagtfsfeeds/nyct%2Fgtfs-bdfm\",\n        // { headers: { \"x-api-key\": 'SThAc9Dfpb3OJ47mVg3RP3Q9qJfAOE9F5TvwZcMs'}\n        // },\n        // (resp) => {\n        //     resp.on('data', (chunk) => {\n        //     console.log(\"Receiving Data\");\n        //     });\n        //     resp.on('end', () => {\n        //     console.log(\"Finished receiving data\");\n        //     });\n        // }).on(\"error\", (err) => {\n        //     console.log(\"Error: \" + err.message);\n        // });\n\n        // weather data fetch function will go here\n        const options = {\n            method: 'GET',\n            headers: {\n                // 'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com',\n                // 'X-RapidAPI-Key': 'fb978a9957msh0b56e3055da8ae7p111c46jsnfa747495b5bc'\n                'X-API-Key': 'SThAc9Dfpb3OJ47mVg3RP3Q9qJfAOE9F5TvwZcMs',\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n\n        // let url = `https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`;\n        let url = `https://api-endpoint.mta.info/Dataservice/mtagtfsfeeds/nyct%2Fgtfs-bdfm`;\n        fetch(url, options)\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                setResponseObj(response)\n            })\n\n        e.preventDefault();\n        \n    }\n\n    function changeColors() {\n        var main;\n        if (responseObj.weather[0].main === \"Clouds\") {\n            main = \"Clouds\"\n            let appHeaders = document.getElementsByClassName(\"App-header\")\n            for (let i = 0; i < appHeaders.length; i++) {\n                appHeaders[i].style.backgroundColor=\"#163294\";\n            }\n    \n            let appFooters = document.getElementsByTagName(\"footer\")\n            for (let i = 0; i < appFooters.length; i++) {\n                appFooters[i].style.backgroundColor = \"#411F97\";\n                appFooters[i].style.color=\"white\";\n            }\n    \n            console.log(\"Yolo\")\n        }\n    }\n\n    // useEffect(()=>{\n    //     getForecast()\n    // })\n\n    return (\n        // JSX code will go here\n        <div>\n            <h2>Your local Weather</h2>\n            <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    className={classes.textInput}\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    />\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celcius\n                </label>\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\n            </form>\n            <Conditions \n                responseObj={responseObj}\n            />\n        </div>\n    )\n}\n\nexport default Forecast;","/Users/mohammedalam/Documents/RIT/Mornin/src/components/Conditions/Conditions.js",["79"],[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":10,"column":12,"nodeType":"86","messageId":"87","endLine":10,"endColumn":20},{"ruleId":"84","severity":1,"message":"89","line":10,"column":22,"nodeType":"86","messageId":"87","endLine":10,"endColumn":33},{"ruleId":"84","severity":1,"message":"90","line":11,"column":12,"nodeType":"86","messageId":"87","endLine":11,"endColumn":24},{"ruleId":"84","severity":1,"message":"91","line":11,"column":26,"nodeType":"86","messageId":"87","endLine":11,"endColumn":41},{"ruleId":"84","severity":1,"message":"92","line":33,"column":14,"nodeType":"86","messageId":"87","endLine":33,"endColumn":26},{"ruleId":"84","severity":1,"message":"93","line":36,"column":13,"nodeType":"86","messageId":"87","endLine":36,"endColumn":17},{"ruleId":"80","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"84","severity":1,"message":"96","line":4,"column":9,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"97","line":9,"column":11,"nodeType":"86","messageId":"87","endLine":9,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":10,"column":12,"nodeType":"86","messageId":"87","endLine":10,"endColumn":20},{"ruleId":"84","severity":1,"message":"89","line":10,"column":22,"nodeType":"86","messageId":"87","endLine":10,"endColumn":33},{"ruleId":"84","severity":1,"message":"90","line":11,"column":12,"nodeType":"86","messageId":"87","endLine":11,"endColumn":24},{"ruleId":"84","severity":1,"message":"91","line":11,"column":26,"nodeType":"86","messageId":"87","endLine":11,"endColumn":41},{"ruleId":"84","severity":1,"message":"92","line":55,"column":14,"nodeType":"86","messageId":"87","endLine":55,"endColumn":26},{"ruleId":"84","severity":1,"message":"93","line":58,"column":13,"nodeType":"86","messageId":"87","endLine":58,"endColumn":17},{"ruleId":"84","severity":1,"message":"96","line":4,"column":9,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'isPageLoaded' is assigned a value but never used.","'setIsPageLoaded' is assigned a value but never used.","'changeColors' is defined but never used.","'main' is assigned a value but never used.",["98"],["99"],"'weatherLogo' is defined but never used.","'uriEncodedCity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]